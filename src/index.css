@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 4%;
    --foreground: 0 0% 98%;

    --card: 0 0% 6%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 6%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 61% 52%;
    --primary-foreground: 0 0% 98%;

    --secondary: 347 61% 19%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --accent: 15 64% 37%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 18%;
    --input: 0 0% 18%;
    --ring: 0 61% 52%;

    --radius: 0.75rem;

    /* Premium design tokens */
    --grain-opacity: 0.05;
    --glow-primary: 0 61% 52%;
    --surface-dark: 0 0% 8%;
    --surface-darker: 0 0% 6%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    position: relative;
    background: linear-gradient(180deg, hsl(347 61% 10%) 0%, hsl(0 0% 4%) 30%, hsl(0 0% 4%) 100%);
    background-attachment: fixed;
  }

  body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: var(--grain-opacity);
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    pointer-events: none;
    z-index: 1;
  }

  * {
    position: relative;
    z-index: 2;
  }
}

@layer utilities {
  .text-gradient {
    @apply bg-gradient-to-r from-primary via-accent to-foreground bg-clip-text text-transparent;
  }

  .glow-text {
    text-shadow: 0 0 20px hsl(var(--glow-primary) / 0.4);
  }

  .surface-dark {
    background-color: hsl(var(--surface-dark));
  }

  .surface-darker {
    background-color: hsl(var(--surface-darker));
  }

  .transition-smooth {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}
